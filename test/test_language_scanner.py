# Copyright (C) 2021 Anthony Harrison
# SPDX-License-Identifier: GPL-3.0-or-later

import pathlib
import pytest

from cve_bin_tool.cvedb import CVEDB
from cve_bin_tool.util import ProductInfo
from cve_bin_tool.version_scanner import VersionScanner

TEST_FILE_PATH = pathlib.Path(__file__).parent.resolve() / "language_data"

PRODUCT_MAPPINGS = {
    "pom.xml": ["jmeter", "hamcrest"],
    "fail-package-lock.json": [],
    "FAIL-PKG-INFO": [],
    "fail_pom.xml": [],
    "renv.lock": ["cli", "clipr", "commonmark", "crayon", "credentials", "curl", "digest", "evaluate", "glue", "lattice", "lifecycle", "mime", "openssl", "ps", "xopen", "yaml", "zip"],
    "Cargo.lock": ["bumpalo", "cranelift-codegen", "crossbeam-channel", "digest", "generic-array", "hex", "libc", "linked-hash-map", "lock_api", "memoffset", "nix", "once_cell", "openssl", "paste", "phf", "quote", "rand_core", "regex", "serde_cbor", "sha2", "smallvec", "socket2", "time", "yaml-rust"],
    "Gemfile.lock": ["addressable", "backburner", "builder", "crack", "curses", "dalli", "debug", "digest", "em-http-request", "faye", "faye-websocket", "httpclient", "i18n", "image_processing", "jmespath", "json", "jwt", "loofah", "mail", "matrix", "mini_magick", "nokogiri", "parallel", "pg", "puma", "rack", "rack-protection", "rake", "rdoc", "redcarpet", "redis", "rexml", "rubocop", "rubyzip", "set", "sidekiq", "sinatra", "sprockets", "sqlite3", "terser", "thin", "thor", "tzinfo", "useragent", "webrick", "websocket", "websocket-extensions"],
    "requirements.txt": ["plotly", "zstandard", "requests", "urllib3", "rsa", "aiohttp", "httplib2", "cryptography"],
    "package-lock.json": ["cache", "core", "http-client", "generator", "expect"],
    ".package-lock.json": ["cache", "core", "http-client", "generator", "expect"],
    "go.mod": ["json-patch", "protobuf", "net", "term", "time", "api", "yaml", "jsonpointer", "go", "text", "appengine", "json"],
    "Package.resolved": ["alliance_web_platform"],
    "composer.lock": ["cli", "cron", "csrf", "database", "phpunit"],
    "cpanfile": ["perl", "warnings", "base"],
    "pubspec.lock": ["dio", "archive"],
}

@pytest.fixture(scope="class")
def cvedb():
    cvedb = CVEDB()
    cvedb.get_cvelist_if_stale()
    yield cvedb

@pytest.mark.parametrize("filename, product_list", PRODUCT_MAPPINGS.items())
def test_language_package(filename, product_list, cvedb):
    """Test valid language product list files"""
    scanner = VersionScanner()
    scanner.file_stack.append(TEST_FILE_PATH / filename)
    found_product = set()
    for product in scanner.scan_file(TEST_FILE_PATH / filename):
        if product:product_info, file_path = product
            found_product.add(product_info.product)
    assert found_product == set(product_list)
    assert file_path == TEST_FILE_PATH / filename
